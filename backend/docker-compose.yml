version: '3'
networks:
    app_net:
      driver: bridge 
services:
  users:
    image: users-backend:latest
    build: ./users
    ports:
      - "3000:3000"
    environment:
      DB_NAME: monitor_users
      DB_HOST: users_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      FLASK_APP: ./src/main.py
      ENV: dev
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - app_net
  users_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - app_net
  tests:
    build: ./tests
    ports:
      - "3001:3000"
    environment:
      DB_NAME: monitor_tests
      DB_HOST: tests_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      FLASK_APP: ./src/main.py
      ENV: dev
    depends_on:
      tests_db:
        condition: service_healthy
    networks:
      - app_net
  tests_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_tests
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - app_net
  proyects:
    build: ./proyects
    ports:
      - "3002:3000"
    environment:
      DB_NAME: monitor_proyects
      DB_HOST: proyects_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      FLASK_APP: ./src/main.py
      ENV: dev
    depends_on:
      proyects_db:
        condition: service_healthy
    networks:
      - app_net
  proyects_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_proyects
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - app_net
  auth:
    build: ./authentication
    ports:
      - "3003:3000"
    environment:
      DB_NAME: monitor_auth
      DB_HOST: auth_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      FLASK_APP: ./src/main.py
      ENV: dev
    depends_on:
      auth_db:
        condition: service_healthy
    networks:
      - app_net
  auth_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - app_net
  